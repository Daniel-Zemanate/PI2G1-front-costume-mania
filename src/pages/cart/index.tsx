import CostumesList from "@/components/CostumesList";
import Filters from "@/components/Filters";
import { ApiCostumeResponse, ApiCostume, Category } from "@/interfaces/costume";
import SimpleLayout from "@/layouts/simpleLayout";
import { getCategories } from "@/services/categories.service";
import Head from "next/head";
import React, { useEffect } from "react";
import { Frijole } from "next/font/google";
import Breadcrumbs from "@/components/Breadcrumbs";
import { AiOutlineHome } from "react-icons/ai";
import { GetServerSideProps } from "next";
import { getCostumes } from "@/services/costumes.service";
import Pagination from "@/components/Pagination";
import ErrorMessage from "@/components/ErrorMessage";
import { CartList } from "@/components/CartList";
import { useDispatch, useSelector } from "@/store/store";
import { ICart } from "@/store/slices/cartSlice";
import { getCartState } from "@/store/slices/cartSlice";
import TotalAmount from "@/components/TotalAmount";



const frijole = Frijole({
  subsets: ["latin"],
  weight: "400",
});

type Props = {
  response: ApiCostumeResponse | { message: string };
};

const CartPage = ({ response }: Props) =>{
    const { items: cartItems } = useSelector(getCartState);

    const sumCostumePrices = (costumes: any[]) => {
      return costumes.reduce((total, item) => total + (item.costume.price * item.quantity), 0);
    };

    const totalPrices = sumCostumePrices(cartItems);

  console.log(cartItems);
 
  if ("message" in response) {
    return (
      <SimpleLayout>
        <ErrorMessage text={response.message} title="Error" />
      </SimpleLayout>
    );
  }

  const {
    content: costumes,
    totalPages,
    pageable: { pageNumber },
    first,
    last,
  } = response;

  return (
    <SimpleLayout>
      <Head>
        <title>Costumes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-[50%] w-[90vw] px-4 sm:px-6 lg:px-8">
        <Breadcrumbs
          homeElement={<AiOutlineHome />}
          separator={<span> / </span>}
          activeClasses="text-amber-500"
          containerClasses="flex py-2 md:py-4 bg-gradient-to-r from-purple-600 to-blue-600 items-center"
          listClasses="hover:underline mx-2 font-bold"
          capitalizeLinks
        />
        <div className="flex flex-col sm:flex-row space-x-4">
            <CartList cartItems={cartItems}></CartList>
           <TotalAmount totalPrices={totalPrices.toFixed(2)}></TotalAmount>
        </div>
      </main>
    </SimpleLayout>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
    const page = Number(query?.page) || 0;
    const response: ApiCostumeResponse = await getCostumes({ ...query, page });
  
    return {
      props: {
        response,
      },
    };
  };

export default CartPage;
