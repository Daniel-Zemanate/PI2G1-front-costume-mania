import Breadcrumbs from "@/components/Breadcrumbs";
import LineChart from "@/components/LineChart";
import SimpleLayout from "@/layouts/simpleLayout";
import Head from "next/head";
import React from "react";
import { AiOutlineHome } from "react-icons/ai";
import { Frijole } from "next/font/google";
import DonutChart from "@/components/DonutChart";
import MonthlyReport from "@/components/MonthlyReport";
import GeneralReport from "@/components/GeneralReport";
import CustomPeriodReport from "@/components/CustomPeriodReport";
import { GetServerSideProps } from "next";
import { getCompleteReport } from "@/services/reports.service";
import { Report } from "@/interfaces/reports";

const frijole = Frijole({
  subsets: ["latin"],
  weight: "400",
});

type Props = {
  data: Report;
};

function ReportsPage({ data }: Props) {
  return (
    <SimpleLayout>
      <Head>
        <title>Reports</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="min-h-[50%] w-[90vw] px-4 sm:px-6 lg:px-8 mb-8">
        <h1
          className={`${frijole.className} text-5xl py-4 md:py-6 text-orange-2`}
          style={{ textShadow: "2px 2px 2px rgba(0, 0, 0, 1)" }}
        >
          Reports
        </h1>
        <Breadcrumbs
          homeElement={<AiOutlineHome />}
          separator={<span> / </span>}
          activeClasses="text-amber-500"
          containerClasses="flex py-2 md:py-4 bg-gradient-to-r from-purple-600 to-blue-600 items-center"
          listClasses="hover:underline mx-2 font-bold"
          capitalizeLinks
        />
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 border rounded p-4 md:py-12 lg:px-20">
          <div className="flex flex-col border rounded border-lightGrey/50 p-12  items-center justify-between gap-2">
            <p className="text-3xl font-bold">
              {data.generalShippingTime.averageDelay.toFixed(2)} days
            </p>
            <p className="text-xl text-center">
              Delay between order and delivery
            </p>
            <div className="">
              <p className="text-grey">
                First invoice:
                {data.generalShippingTime.firstDate}
              </p>
              <p className="text-grey">
                Last invoice: {data.generalShippingTime.lastDate}
              </p>
            </div>
          </div>
          <div className="flex flex-col lg:flex-row border rounded border-lightGrey/50 p-6 md:gap-8 ">
            <div className="w-full lg:w-2/3 h-60">
              <DonutChart data={data.generalShippingTime} />
            </div>
            <div className="w-full lg:w-1/3 md:h-60 flex flex-col gap-4">
              <h3 className="mb-6 text-lg font-bold">Delivery fulfillment</h3>
              <p className="flex justify-between items-center">
                <span className="md:text-sm">Total sales:</span>
                {data.generalShippingTime.quantitySales}
              </p>
              <p className="flex justify-between items-center">
                <span className="md:text-sm">Delivered sales:</span>
                {data.generalShippingTime.quantityDeliveredSales}
              </p>
            </div>
          </div>
          <div className="flex flex-col border rounded border-lightGrey/50 p-6 gap-6 justify-center items-center">
            <div className="bg-green bg-opacity-20 p-4 rounded w-full">
              <p className="text-2xl md:text-4xl">{data.minDelay}</p>
              <small>month of least delays</small>
            </div>
            <div className="bg-red bg-opacity-20 p-4 rounded w-full">
              <p className="text-2xl md:text-4xl">{data.maxDelay}</p>
              <small>month of most delays</small>
            </div>
          </div>
          <div className="col-span-1 md:col-span-2 lg:col-span-3 lg:px-24">
            <h3 className="font-bold md:text-xl">Average shipping days</h3>
            <LineChart data={data.detailedShippingTime} />
          </div>
          <div className="flex flex-col justify-between border rounded border-lightGrey/50 p-6 items-center gap-6">
            <GeneralReport />
          </div>
          <div className="flex flex-col justify-between border rounded border-lightGrey/50 p-6 items-center gap-6">
            <CustomPeriodReport />
          </div>
          <div className="flex flex-col justify-between border rounded border-lightGrey/50 p-6 items-center gap-6">
            <MonthlyReport />
          </div>
        </div>
      </section>
    </SimpleLayout>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const data = await getCompleteReport();

  return {
    props: {
      data,
    },
  };
};

export default ReportsPage;
